# Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах
# в рамках первых трех уроков. Проанализировать результат и определить программы с наиболее
# эффективным использованием памяти.

# Сформировать из введенного числа обратное по порядку входящих в него цифр
# и вывести на экран.
# Например, если введено число 3486, надо вывести 6843.
# Python 3.8.5 [MSC v.1916 64 bit (AMD64)], OS Windows 10 [Version 10.0.19041.985]
# Решение с помощью цикла:

import sys

memory = 0
n = int(input('Введите число:'))

memory = memory + sys.getsizeof(n)

m = 0
while n > 0:
    m = m * 10 + n % 10
    n = n // 10

memory = memory + sys.getsizeof(m)
print("Обратное число: ", m)
print("В программе задействовано байт памяти:", memory)

# Возьмем число 123456789
# Обратное число:  987654321
# В программе задействовано байт памяти: 56
# на две переменные целого типа

# Возьмем число 1234567890987654321234567890987654321
# Обратное число:  1234567890987654321234567890987654321
# В программе задействовано байт памяти: 80
